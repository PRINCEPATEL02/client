{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\princ\\\\OneDrive\\\\Desktop\\\\chatlive\\\\client\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5001\";\nexport default function Chat({\n  userId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const socketRef = useRef();\n  const messagesEndRef = useRef(null);\n  const roomId = \"global_chat_room\";\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  useEffect(() => {\n    // Fetch existing messages from server\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/api/messages/${roomId}`);\n        // Sort messages by timestamp ascending to ensure continuous flow\n        const sortedMessages = response.data.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n        setMessages(sortedMessages);\n      } catch (error) {\n        console.error(\"Failed to fetch messages:\", error);\n      }\n    };\n    fetchMessages();\n\n    // Connect to socket server\n    socketRef.current = io(API_URL, {\n      transports: ['websocket', 'polling']\n    });\n\n    // Join the chat room\n    socketRef.current.emit(\"join_room\", roomId);\n\n    // Listen for incoming messages\n    socketRef.current.on(\"receive_message\", message => {\n      console.log(\"Received message via socket:\", message);\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Cleanup on unmount\n    return () => {\n      socketRef.current.off(\"receive_message\");\n      socketRef.current.disconnect();\n    };\n  }, []);\n  const handleSend = () => {\n    if (input.trim() === \"\") return;\n    const messageData = {\n      roomId,\n      sender: userId,\n      content: input.trim()\n    };\n\n    // Emit message to server\n    socketRef.current.emit(\"send_message\", messageData);\n    setInput(\"\");\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"chat-header\",\n      children: \"Live Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [messages.map((msg, index) => {\n        const isCurrentUser = msg.sender === userId;\n        const messageTime = msg.timestamp ? new Date(msg.timestamp).toLocaleTimeString() : \"\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${isCurrentUser ? \"current-user\" : \"other-user\"}`,\n          style: {\n            animation: \"fadeIn 0.3s ease\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sender-info\",\n            children: isCurrentUser ? \"You\" : msg.sender || \"Unknown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), messageTime && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timestamp\",\n            children: messageTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 31\n          }, this)]\n        }, msg._id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        disabled: input.trim() === \"\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"Ipk5xA9ct7VpT3MRofJplcaZZOg=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","Chat","userId","_s","messages","setMessages","input","setInput","socketRef","messagesEndRef","roomId","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchMessages","response","get","sortedMessages","data","sort","a","b","Date","timestamp","error","console","transports","emit","on","message","log","prevMessages","off","disconnect","handleSend","trim","messageData","sender","content","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","isCurrentUser","messageTime","toLocaleTimeString","style","animation","_id","ref","type","placeholder","value","onChange","target","onKeyDown","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/princ/OneDrive/Desktop/chatlive/client/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport \"./Chat.css\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5001\";\r\n\r\nexport default function Chat({ userId }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const socketRef = useRef();\r\n  const messagesEndRef = useRef(null);\r\n  const roomId = \"global_chat_room\";\r\n\r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Fetch existing messages from server\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/api/messages/${roomId}`);\r\n        // Sort messages by timestamp ascending to ensure continuous flow\r\n        const sortedMessages = response.data.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n        setMessages(sortedMessages);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch messages:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n\r\n    // Connect to socket server\r\n    socketRef.current = io(API_URL, {\r\n      transports: ['websocket', 'polling'],\r\n    });\r\n\r\n    // Join the chat room\r\n    socketRef.current.emit(\"join_room\", roomId);\r\n\r\n    // Listen for incoming messages\r\n    socketRef.current.on(\"receive_message\", (message) => {\r\n      console.log(\"Received message via socket:\", message);\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      socketRef.current.off(\"receive_message\");\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleSend = () => {\r\n    if (input.trim() === \"\") return;\r\n\r\n    const messageData = {\r\n      roomId,\r\n      sender: userId,\r\n      content: input.trim(),\r\n    };\r\n\r\n    // Emit message to server\r\n    socketRef.current.emit(\"send_message\", messageData);\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2 className=\"chat-header\">Live Chat</h2>\r\n      <div className=\"messages\">\r\n        {messages.map((msg, index) => {\r\n          const isCurrentUser = msg.sender === userId;\r\n          const messageTime = msg.timestamp ? new Date(msg.timestamp).toLocaleTimeString() : \"\";\r\n          return (\r\n            <div\r\n              key={msg._id || index}\r\n              className={`message ${isCurrentUser ? \"current-user\" : \"other-user\"}`}\r\n              style={{ animation: \"fadeIn 0.3s ease\" }}\r\n            >\r\n              <div className=\"sender-info\">{isCurrentUser ? \"You\" : (msg.sender || \"Unknown\")}</div>\r\n              <div>{msg.content}</div>\r\n              {messageTime && <div className=\"timestamp\">{messageTime}</div>}\r\n            </div>\r\n          );\r\n        })}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n        />\r\n        <button onClick={handleSend} disabled={input.trim() === \"\"}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}